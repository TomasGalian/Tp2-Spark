{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyMiPNs6kkA13cc0KXQi7aVY"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["¿Cuál es el nombre de la película con mayor cantidad de empleados contratados para trabajar en Efectos Visuales?"],"metadata":{"id":"ddg7DUdOALwO"}},{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XI8DOGzsAJ_e","executionInfo":{"status":"ok","timestamp":1665862065517,"user_tz":180,"elapsed":60163,"user":{"displayName":"Tomas Ezequiel Galian","userId":"10920691488309285943"}},"outputId":"a77d6a79-ff3a-42c3-aaf3-5b792e4cb6cf"},"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting pyspark\n","  Downloading pyspark-3.3.0.tar.gz (281.3 MB)\n","\u001b[K     |████████████████████████████████| 281.3 MB 40 kB/s \n","\u001b[?25hCollecting py4j==0.10.9.5\n","  Downloading py4j-0.10.9.5-py2.py3-none-any.whl (199 kB)\n","\u001b[K     |████████████████████████████████| 199 kB 37.8 MB/s \n","\u001b[?25hBuilding wheels for collected packages: pyspark\n","  Building wheel for pyspark (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for pyspark: filename=pyspark-3.3.0-py2.py3-none-any.whl size=281764026 sha256=131fc1a4b97593a4b14ad6623fa835b91f4cfbf298869b91356a700fa199ecb9\n","  Stored in directory: /root/.cache/pip/wheels/7a/8e/1b/f73a52650d2e5f337708d9f6a1750d451a7349a867f928b885\n","Successfully built pyspark\n","Installing collected packages: py4j, pyspark\n","Successfully installed py4j-0.10.9.5 pyspark-3.3.0\n"]}],"source":["#Instalamos pyspark\n","!pip install pyspark"]},{"cell_type":"code","source":["#Realizamos las importaciones para usar google drive y pyspark\n","from pydrive.auth import GoogleAuth\n","from pydrive.drive import GoogleDrive\n","from google.colab import auth\n","from oauth2client.client import GoogleCredentials\n","from pyspark.sql import *\n","from pyspark.sql.functions import *\n","from pyspark import SparkContext\n","from pyspark.sql import SQLContext"],"metadata":{"id":"AGUY7EzvCmMh","executionInfo":{"status":"ok","timestamp":1665862065959,"user_tz":180,"elapsed":447,"user":{"displayName":"Tomas Ezequiel Galian","userId":"10920691488309285943"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["auth.authenticate_user()\n","gauth = GoogleAuth()\n","gauth.credentials = GoogleCredentials.get_application_default()\n","drive = GoogleDrive(gauth)"],"metadata":{"id":"f7BuDsvkCoy0","executionInfo":{"status":"ok","timestamp":1665862372121,"user_tz":180,"elapsed":53184,"user":{"displayName":"Tomas Ezequiel Galian","userId":"10920691488309285943"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["#Descargamos crew.parquet\n","descarga = drive.CreateFile({'id':'1elKIhSe68dVylYnU54GDpGWACYPn4ycy'})\n","descarga.GetContentFile('crew.parquet')"],"metadata":{"id":"TaN80aoICuHt","executionInfo":{"status":"ok","timestamp":1665862399530,"user_tz":180,"elapsed":4070,"user":{"displayName":"Tomas Ezequiel Galian","userId":"10920691488309285943"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["#Descargamos movies.parquet\n","descarga = drive.CreateFile({'id':'1YKh46_KdgSC-6UZ0mttbOqVI6tXgly-F'})\n","descarga.GetContentFile('movies.parquet')"],"metadata":{"id":"GBk-FeYuQ6M2","executionInfo":{"status":"ok","timestamp":1665862405487,"user_tz":180,"elapsed":5959,"user":{"displayName":"Tomas Ezequiel Galian","userId":"10920691488309285943"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["spark = SparkSession.builder.getOrCreate() #Obtenemos una sesion de spark\n","sc = spark.sparkContext #Obtenemos el contexto"],"metadata":{"id":"7nITa9zVCwKi","executionInfo":{"status":"ok","timestamp":1665862412195,"user_tz":180,"elapsed":6710,"user":{"displayName":"Tomas Ezequiel Galian","userId":"10920691488309285943"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["#Creo los rdd con los que voy a trabajar\n","sqlContext = SQLContext(sc)\n","df = sqlContext.read.parquet('crew.parquet',header=True,inferSchema=True)\n","crewRdd = df.rdd\n","df = sqlContext.read.parquet('movies.parquet',header=True,inferSchema=True)\n","moviesRdd = df.rdd "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mzsD1vTvA3-c","executionInfo":{"status":"ok","timestamp":1665862420321,"user_tz":180,"elapsed":8140,"user":{"displayName":"Tomas Ezequiel Galian","userId":"10920691488309285943"}},"outputId":"15e32610-f741-4282-9b28-19ba12bd1963"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/pyspark/sql/context.py:114: FutureWarning: Deprecated in 3.0.0. Use SparkSession.builder.getOrCreate() instead.\n","  FutureWarning,\n"]}]},{"cell_type":"code","source":["#Me fijo el nombre de las columnas de mi crewRdd\n","crewRdd.first()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VVgNxbFPPAZK","executionInfo":{"status":"ok","timestamp":1665862421821,"user_tz":180,"elapsed":1510,"user":{"displayName":"Tomas Ezequiel Galian","userId":"10920691488309285943"}},"outputId":"55b83e3c-867a-49d1-b5fa-07a50727883d"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Row(id=862, crew_id=7879, department='Directing', job='Director', name='John Lasseter')"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["#Me fijo como se llama a la categoria de efectos visuales\n","crewRdd.map(lambda x: x.department).distinct().collect()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eqGYxu3rMUt1","executionInfo":{"status":"ok","timestamp":1665862446922,"user_tz":180,"elapsed":25103,"user":{"displayName":"Tomas Ezequiel Galian","userId":"10920691488309285943"}},"outputId":"9ff1db53-25a8-4fd9-f1f2-0693bf00a284"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['Production',\n"," 'Art',\n"," 'Camera',\n"," 'Costume & Make-Up',\n"," 'Directing',\n"," 'Writing',\n"," 'Editing',\n"," 'Sound',\n"," 'Visual Effects',\n"," 'Crew',\n"," 'Lighting',\n"," 'Actors']"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["#Chequeo por curiosidad cuantos datos tenemos para el departamento de \"Visual Effects\"\n","crewRdd.map(lambda x: x.department=='Visual Effects').count()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"13OcyiGDNumm","executionInfo":{"status":"ok","timestamp":1665862446923,"user_tz":180,"elapsed":14,"user":{"displayName":"Tomas Ezequiel Galian","userId":"10920691488309285943"}},"outputId":"9e9ff1c2-ca3b-4ebb-854b-6767baac6695"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["464314"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["#Aca lo primero que hago es filtrar primero para quedarme solo con la crew que trabajo en efectos visuales.\n","#Luego mapeo mi rdd de forma que me quede una tupla clave valor de la forma (idPelicula,1).\n","#Despues hago un reduceByKey sumando los valores que me daran el total de trabajadores por pelicula\n","#Por ultimo hago un take order para que me muestre la pelicula con mas trabajadores\n","movieId = crewRdd.filter(lambda x: x.department=='Visual Effects').map(lambda x: (x.id,1)).reduceByKey(lambda a,b: a+b).reduce(lambda a,b: a if (a[1]>b[1]) else b)[0]\n","movieId"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-01BZiIaHTAn","executionInfo":{"status":"ok","timestamp":1665862638419,"user_tz":180,"elapsed":4991,"user":{"displayName":"Tomas Ezequiel Galian","userId":"10920691488309285943"}},"outputId":"6a27ba20-4216-4007-b4bd-f93f461c3804"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["339964"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["#Me fijo el nombre de las columnas de moviesRdd\n","moviesRdd.first()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DFa5Ap9xR8dI","executionInfo":{"status":"ok","timestamp":1665862707782,"user_tz":180,"elapsed":618,"user":{"displayName":"Tomas Ezequiel Galian","userId":"10920691488309285943"}},"outputId":"0ee3d80f-6862-4d10-a359-879391dde4a4"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Row(adult='False', belongs_to_collection='Toy Story Collection', budget='30000000', genres='Animation,Comedy,Family', homepage='http://toystory.disney.com/toy-story', id='862', imdb_id='tt0114709', original_language='en', original_title='Toy Story', overview=\"Led by Woody, Andy's toys live happily in his room until Andy's birthday brings Buzz Lightyear onto the scene. Afraid of losing his place in Andy's heart, Woody plots against Buzz. But when circumstances separate Buzz and Woody from their owner, the duo eventually learns to put aside their differences.\", popularity=21.946943, poster_path='/rhIRbceoE9lR4veEXuwCC2wARtG.jpg', production_companies='3', production_countries=\"[{'iso_3166_1': 'US', 'name': 'United States of America'}]\", release_date='1995-10-30', revenue=373554033.0, runtime=81.0, spoken_languages=\"[{'iso_639_1': 'en', 'name': 'English'}]\", status='Released', tagline=None, title='Toy Story', video=False, vote_average=7.7, vote_count=5415.0)"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["#Usando la variable movieId la busco dentro de moviesRdd y me quedo con el titulo\n","moviesRdd.filter(lambda x: x.id == str(movieId)).map(lambda x: x.original_title).collect()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OhvhCvSRQ0LH","executionInfo":{"status":"ok","timestamp":1665862710914,"user_tz":180,"elapsed":3133,"user":{"displayName":"Tomas Ezequiel Galian","userId":"10920691488309285943"}},"outputId":"86192571-6376-46a5-a79e-28d473403466"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['Valerian and the City of a Thousand Planets']"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":[],"metadata":{"id":"WX200eeKJ6dh"},"execution_count":null,"outputs":[]}]}